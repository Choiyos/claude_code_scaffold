# Documentation server for Claude Code
FROM nginx:alpine

# Install Node.js for building docs if needed
RUN apk add --no-cache nodejs npm python3 py3-pip

# Install documentation builders
RUN npm install -g \
    @docusaurus/core \
    @docusaurus/preset-classic \
    docsify-cli \
    gitbook-cli \
    vuepress

RUN pip3 install \
    mkdocs \
    mkdocs-material \
    sphinx \
    sphinx-rtd-theme

# Copy nginx configuration
COPY <<EOF /etc/nginx/conf.d/default.conf
server {
    listen 8080;
    server_name localhost;
    
    root /docs;
    index index.html index.htm;
    
    location / {
        try_files \$uri \$uri/ /index.html;
    }
    
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}
EOF

# Create build script
COPY <<'EOF' /usr/local/bin/build-docs.sh
#!/bin/sh
set -e

echo "Building documentation..."

# Detect documentation system and build
if [ -f "/workspace/mkdocs.yml" ]; then
    echo "Building with MkDocs..."
    cd /workspace && mkdocs build -d /docs
elif [ -f "/workspace/docs/conf.py" ]; then
    echo "Building with Sphinx..."
    cd /workspace/docs && sphinx-build -b html . /docs
elif [ -f "/workspace/package.json" ] && grep -q "docusaurus" /workspace/package.json; then
    echo "Building with Docusaurus..."
    cd /workspace && npm run build && cp -r build/* /docs/
elif [ -f "/workspace/.vuepress/config.js" ]; then
    echo "Building with VuePress..."
    cd /workspace && vuepress build -d /docs
else
    echo "No documentation system detected, serving raw files..."
    cp -r /workspace/docs/* /docs/ 2>/dev/null || true
    cp -r /workspace/architecture/* /docs/architecture/ 2>/dev/null || true
fi

echo "Documentation build complete!"
EOF

RUN chmod +x /usr/local/bin/build-docs.sh

# Create startup script
COPY <<'EOF' /docker-entrypoint.sh
#!/bin/sh
set -e

# Build documentation on startup
/usr/local/bin/build-docs.sh

# Start nginx
exec nginx -g 'daemon off;'
EOF

RUN chmod +x /docker-entrypoint.sh

WORKDIR /docs
EXPOSE 8080

ENTRYPOINT ["/docker-entrypoint.sh"]